# This file contains common pin mappings for the BigTreeTech SKR 3.
# To use this config, the firmware should be compiled for the
# STM32H743 with a "128KiB bootloader".
#
# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD6
microsteps: 32
rotation_distance: 40
Full_Steps_Per_Rotation = 200
endstop_pin: ^!PC1
position_endstop: -5
position_min: -5
position_max: 210
homing_speed: 75

[stepper_y]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 32
rotation_distance: 40
Full_Steps_Per_Rotation = 200
endstop_pin: ^!PC3
position_endstop: 0
position_max: 210
homing_speed: 75

[stepper_z]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PE0
microsteps: 32
rotation_distance: 8
Full_Steps_Per_Rotation = 200
#endstops were plugged wrong, check your endstops if it crash one of Z axis.
endstop_pin: ^!PC15
#endstop_pin = probe:z_virtual_endstop
position_endstop: 0
homing_retract_dist = 5
position_max = 205
position_min = 0
homing_speed = 10


[stepper_z1]
step_pin: PD11
dir_pin: !PD10
enable_pin: !PD13
microsteps: 32
rotation_distance: 8
Full_Steps_Per_Rotation = 200
endstop_pin: ^!PC0
#endstop_pin = probe:z1_virtual_endstop
#position_endstop: 0
#position_max = 210
#position_min = -5
#homing_speed = 5
#second_homing_speed=10

[extruder]
step_pin: PD15
dir_pin: PD14
enable_pin: !PC7
microsteps: 16
rotation_distance: 8
Full_Steps_Per_Rotation = 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA2
control: pid
pid_Kp: 29.796
pid_Ki: 1.142
pid_Kd: 194.420
min_temp: 0
max_temp: 265
#pid_Kp=29.796 pid_Ki=1.142 pid_Kd=194.420
max_extrude_only_distance = 500.0
min_extrude_temp = 180
pressure_advance = 0.3624
max_extrude_cross_section = 150

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
pid_Kp: 71.492
control: pid
pid_Ki: 2.522
pid_Kd: 506.702
#pid_Kp=71.492 pid_Ki=2.522 pid_Kd=506.702
min_temp: 15
max_temp: 110

[fan] #Part Cooling
pin: PB7

[heater_fan hotend_fan]
pin: PB5
heater: extruder
heater_temp: 50.0

#[controller_fan Control_Board_fan]
#pin: PB5


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h743xx_25001A000F51303232383230-if00
baud: 115200
#serial: /dev/ttyAMA0
#restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 10000
max_accel_to_decel: 10000
max_z_velocity: 20
max_z_accel: 100
square_corner_velocity: 5

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PD5
run_current: 0.800
stealthchop_threshold: 999999


[tmc2209 stepper_y]
uart_pin: PD0
run_current: 0.800
stealthchop_threshold: 999999


[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.500
hold_current: 0.400
stealthchop_threshold: 999999


[tmc2209 extruder]
uart_pin: PC6
run_current: 0.600


[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 0.500
hold_current: 0.400


## do your own measurement
## https://www.klipper3d.org/Resonance_Compensation.html
#[input_shaper]
#shaper_freq_x = 85.0
#shaper_freq_y = 48.4
#shaper_type = MVZ #VZ   #3hump_ei

#Turn ON to adjust home location from 0,0,0##
[safe_z_home]
home_xy_position = 0,0
speed = 150
z_hop = 10
z_hop_speed = 10

#[bltouch]
#sensor_pin = ^PC13
#control_pin = PE5
## do your own measurement
#x_offset = 31.5
#y_offset = -18.5
#z_offset = 1.825
#stow_on_each_sample = False
#probe_with_touch_mode = True


[force_move]
enable_force_move: True

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[firmware_retraction]
retract_length: 6
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 1
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.




[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000
  
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME
  
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  G91		  #relative positioning
  # G1 E-.1 
  G10               #retract
  G1 Z10 Y50 F1000	#Z axis up 10mm, Y out 50mm
  G90		            #absolute positioning
  G28 X0 	          #home X axis
  M84               ; steppers off
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro START_PRINT]
gcode:
  G28 X0 Y0                     ; move X/Y to min endstops
  G28 Z0                        ; move Z to min endstops
  G1 Z20 Y5 F500                ; move nozzle away from bed
  G92 E0                        ; zero the extruded length
  G1 E2 F2400                    ; extrude 5mm of feed stock
  G92 E0                        ; zero the extruded length again
  M117 Printing...

[gcode_macro END_PRINT]
gcode:
  M400                          ; Clear Buffer
  M104 S0                       ; turn off extruder
  M140 S0                       ; turn off bed
  G10                           ; retract
  G91                           ; relative positioning
  G1 E-0.03 Z1.00 X20.0 Y20.0   ; move nozzle to remove stringing
  M106 S0                       ; turn off fan
  G1 Z20                        ; move nozzle up 20mm
  G90                           ; absolute positioning
  G0 X0 Y175                    ; park nozzle at rear
  M84                           ; steppers off
  G4 P250                       ; dwell
  #_TIMELAPSE_NEW_FRAME
  M300                          ; Beep

[gcode_macro Heat_Hotend]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200

#[gcode_macro _TIMELAPSE_NEW_FRAME]
#gcode:
# RUN_SHELL_COMMAND CMD=DSLR_trigger
# {action_call_remote_method("timelapse_newframe")}
 ; leave this in a separate macro!

#[gcode_macro TIMELAPSE_TAKE_FRAME]
#gcode:
  # G10
  # SAVE_GCODE_STATE NAME=SNAPSHOT
  # G1 X175.0 F10000
  # G1 Y100.0 F10000
  # G4 P500 ;dwell
  # M400    ;clear buffer
 # _TIMELAPSE_NEW_FRAME
  # G4 P500 ;moar dwelling
  # M400
  # RESTORE_GCODE_STATE NAME=SNAPSHOT MOVE=1
  # G11
  
#[gcode_macro TIMELAPSE_RENDER]
#gcode:
  #{action_call_remote_method("timelapse_render")}




#[gcode_macro GPHOTO_TAKE_FRAME]
#gcode:
    #RUN_SHELL_COMMAND CMD=DSLR_trigger


## for Measuring Resonances through Raspberry pi
## https://www.klipper3d.org/Measuring_Resonances.html

[mcu rpi]
serial: /tmp/klipper_host_mcu

# # LED strip around printer frame
# [output_pin CaseLight]
# pin: rpi:gpio17
# # value: 1
# # shutdown_value: 1

# [gcode_macro TOGGLE_CASELIGHT]
# gcode:
#   SET_PIN PIN=CaseLight VALUE={(not printer['output_pin CaseLight'].value)|int}

# # LEDs at hotend
# [output_pin NozzleLight]
# pin: rpi:gpio27
# # value: 1
# # shutdown_value: 1

# [gcode_macro TOGGLE_NOZZLELIGHT]
# gcode:
#   SET_PIN PIN=NozzleLight VALUE={(not printer['output_pin NozzleLight'].value)|int}

#[adxl345]
#cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,20  # an example

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 69.524
#*# pid_ki = 3.433
#*# pid_kd = 351.967
#*# control = pid
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_type_y = 3hump_ei
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.299
#*# pid_ki = 2.159
#*# pid_kd = 144.286
#*#
#*# [bltouch]
#*# z_offset = 2.4
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.041250, 0.022500, 0.000000, 0.071250
#*# 	  -0.046250, -0.012500, 0.025000, 0.193750
#*# 	  -0.095000, -0.051250, 0.035000, 0.200000
#*# 	  0.047500, 0.035000, 0.063750, 0.157500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 4
#*# max_y = 189.98
#*# mesh_x_pps = 2
#*# max_x = 199.98

## for Measuring Resonances through Raspberry pi
## https://www.klipper3d.org/Measuring_Resonances.html

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

# LED strip around printer frame
# [output_pin CaseLight]
# pin: rpi:gpio17
# # value: 1
# # shutdown_value: 1

# [gcode_macro TOGGLE_CASELIGHT]
# gcode:
#   SET_PIN PIN=CaseLight VALUE={(not printer['output_pin CaseLight'].value)|int}

# # LEDs at hotend
# [output_pin NozzleLight]
# pin: rpi:gpio27
# # value: 1
# # shutdown_value: 1

# [gcode_macro TOGGLE_NOZZLELIGHT]
# gcode:
#   SET_PIN PIN=NozzleLight VALUE={(not printer['output_pin NozzleLight'].value)|int}

[adxl345]
cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    100,100,20  # an example

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 69.524
#*# pid_ki = 3.433
#*# pid_kd = 351.967
#*# control = pid
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_type_y = 3hump_ei
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.299
#*# pid_ki = 2.159
#*# pid_kd = 144.286
#*#
#*# [bltouch]
#*# z_offset = 2.4
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.041250, 0.022500, 0.000000, 0.071250
#*# 	  -0.046250, -0.012500, 0.025000, 0.193750
#*# 	  -0.095000, -0.051250, 0.035000, 0.200000
#*# 	  0.047500, 0.035000, 0.063750, 0.157500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 4
#*# max_y = 189.98
#*# mesh_x_pps = 2
#*# max_x = 199.98